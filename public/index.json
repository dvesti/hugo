[{"content":"A collection of articles, presentations or talks, most likely on Culture and DevOps, because let\u0026rsquo;s admit it, they are one in the same ;)\n","ref":"https://dvesti.github.io/site-hugo/publications/","tags":null,"title":"Publications"},{"content":"","ref":"https://dvesti.github.io/site-hugo/projects/creations/","tags":null,"title":"Creations"},{"content":"","ref":"https://dvesti.github.io/site-hugo/projects/contributions/","tags":[""],"title":"Open Source Contributions"},{"content":"Addressed pretty significant page load performance issue founde in larger deployments. Eliminates uses of intensive backend query, replacing it with an asynchronous API call against a lucene index. This change reduces page load from from 2+ minutes to nearly instant, with an incredibly responsive UI.\n","ref":"https://dvesti.github.io/site-hugo/projects/contributions/deploy-triggers/","tags":["Java","jQuery","REST APIs","Bamboo","JSON"],"title":"Atlassian Deployment Triggers"},{"content":"This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.    ","ref":"https://dvesti.github.io/site-hugo/publications/alldaydevops/","tags":["DevOps","Continuous Integration","Continuous Delivery","CI/CD pipelines","agile","Culture"],"title":"Organically DevOps: Building Quality and Security into the Software Supply Chain at Liberty Mutual"},{"content":"Shields.io is a massive library of badges that can be inserted into project README\u0026rsquo;s or websites displaying various statuses (code coverage, health, version, etc). Support for docker was missing the current build health, and was a pretty trivial addition.\n","ref":"https://dvesti.github.io/site-hugo/projects/contributions/shields-docker/","tags":["Docker","Rest APIs","JavaScript","node.js","JSON"],"title":"Added Docker Build Status Badge to shields.io"},{"content":"While adding Structured Data to a client\u0026rsquo;s website I found some example JSON that was invalid. Simple contribution to cleanup the user documentation providing syntactically valid JSON documents.\n","ref":"https://dvesti.github.io/site-hugo/projects/contributions/schema-org/","tags":["JSON"],"title":"Schema.org Structured Data documentation fixes"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/docker/","tags":null,"title":"Docker"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/java/","tags":null,"title":"Java"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/javascript/","tags":null,"title":"JavaScript"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/json/","tags":null,"title":"JSON"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/node.js/","tags":null,"title":"node.js"},{"content":"","ref":"https://dvesti.github.io/site-hugo/projects/","tags":null,"title":"Projects"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/rest-apis/","tags":null,"title":"REST APIs"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/","tags":null,"title":"Tags"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/atlassian-ecosystem/","tags":null,"title":"Atlassian Ecosystem"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/bosh/","tags":null,"title":"BOSH"},{"content":"BOSH (Bosh Outer SHell) \u0026ldquo;\u0026hellip;is an open source tool for release engineering, deployment, lifecycle management, and monitoring of distributed systems.\u0026rdquo; And it\u0026rsquo;s amazingly powerful. This examples uses BOSH to provision an Alassian vendor app running on JDK along with the support Postgres database and agents to support it. The releases manages the health of services and will automatically provision, start/stop processes across the various services.\n","ref":"https://dvesti.github.io/site-hugo/projects/creations/bosh-agents/","tags":["DevOps","BOSH","Java","Atlassian Ecosystem","monit","python","xml/xslt","bash/shell","REST APIs"],"title":"BOSH release for Bamboo \u0026 Remote Agents"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/devops/","tags":null,"title":"DevOps"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/monit/","tags":null,"title":"monit"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/python/","tags":null,"title":"python"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/agile/","tags":null,"title":"agile"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/continuous-delivery/","tags":null,"title":"Continuous Delivery"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/continuous-integration/","tags":null,"title":"Continuous Integration"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/culture/","tags":null,"title":"Culture"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/apache/","tags":null,"title":"apache"},{"content":"","ref":"https://dvesti.github.io/site-hugo/blog/","tags":null,"title":"Blogs"},{"content":"Intro Doesn\u0026rsquo;t matter whether it\u0026rsquo;s a CakePHP app for a client, your own personal CMS, or any other web based application. If your passing around passwords or other sensitive info you should really implement SSL. SSL provides 2 main perks to your visitors.\n First it encrypts all communication that flies across the web. This prevents curious or devious billies from getting your secrets. Secondly it ensures to the user that your server is in fact who it claims, and not a nasty \u0026lsquo;man in the middle\u0026rdquo; attack. Finally it gives your site that touch of class\u0026hellip;. which of course a classy person like yourself relies on.  Once you implement SSL certificates on your server you\u0026rsquo;ll want to require secure connections using Apache\u0026rsquo;s rewrite module. Now I won\u0026rsquo;t dwell on the creation and signing of certificates, its already well documented. If your just starting out though,heres a few links I recommend;\n Creating self-signed certificates (free, but should only be used internally or for testing, users will; see an \u0026lsquo;Untrusted\u0026rdquo; warning) Requesting a CA Signed certificate (not free, but the final certificate is trusted and seamless for users)  The second link uses the schools internal CA, you will need to pay a public CA like Entrust or Verisign. All of this information is aimed at \u0026lsquo;nix or solaris servers running apache. Why? cause a production windows server is laughable :-p\nNow that you have a certificate, whats next? So there you are you have a shiny new Certificate and Server key, how do you force visitors to your apache driven site to use the SSL? You copied the certificates into the appropite locations right? And you have made the needed changes in httpd.conf right? So now when you view https://example.com you see a \u0026lsquo;trusted\u0026rsquo; warning or your site right? If No to any of these than this article does a pretty good job of outlining those steps.\nThe SSL Works, How do I force connections to use it? First you need to decide if you want to force every page on your site to use SSL, or only a particular sub-domain, or maybe just your admin directory. Since the overhead is minimal there is no harm is forcing the entire domain to leverage SSL, but if it is a self-signed certificate for your personal use than you\u0026rsquo;ll most certainly want to restrict its use to your own areas. This prevents users from seeing that nasty warning \u0026ldquo;This server is not trusted\u0026rdquo; You\u0026rsquo;ll know if your using SSL because the url prefix changes from http to https (s for secure).\nForcing entire domain to use SSL You want any visit, any where to use ssl. This probably the simplest solution. Create or append to your htaccess file in the top directory of your server. Some people use a port check (80 is typically http, while 443 is https) but if you have alernate configs or the user just adds :8080 to the end of the url this method is useless. Instead check whether the https environmental variable is set, if not then redirect.\n1 2  RewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://%{SERVER_NAME}$1 \\[R,L\\]   Forcing sub-domains to use SSL Maybe you only want mysecretarea.example.com to use SSL, that\u0026rsquo;s easy enough. Its the same premise as above, but you move the htaccess file into the directory that corresponds to the subdomain. Also change the second line like below;\n1 2  RewriteCond %{HTTPS} !=on RewriteRule ^(.*)$ https://mysecretarea.%{SERVER_NAME}$1 \\[R,L\\]   Forcing a directory to use SSL This method cn get a little hairier if your using aliases or redirects on top of this one. You\u0026rsquo;ll need to consider what order the commands are read. The basic principle is like so. You want all visits to example.com/admin to use ssl. Create a htaccess file in the parent directory. Again will check for the https variable, but this time we also check for the sub-directory to be in the path.\n1 2  RewriteCond %{HTTPS} !=on RewriteRule ^/admin/(.*)$ https://%{SERVER_NAME}/admin/$1 \\[R,L\\]   ","ref":"https://dvesti.github.io/site-hugo/blog/force-ssl/","tags":["apache","apache","redirect","rewrite","ssl","web development"],"title":"Forcing Visits to use SSL"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/redirect/","tags":null,"title":"redirect"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/rewrite/","tags":null,"title":"rewrite"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/ssl/","tags":null,"title":"ssl"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/web-development/","tags":null,"title":"web development"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/atlassian-developer-ecosystem/","tags":null,"title":"Atlassian Developer Ecosystem"},{"content":"Multiple plugins used by thousands of teams that provide enhanced functionality of Atlassian’s core products (primarily JIRA and Bamboo) to enrich CI/CD capabilities, DevOps automation, or productivity. Functionality spans user interface, web services and persistence.\n","ref":"https://dvesti.github.io/site-hugo/projects/creations/marketplace/","tags":["Java","Spring","REST APIs","Javascript","Atlassian Developer Ecosystem","Bamboo","JIRA","Bitbucket","Confluence","DevOps"],"title":"Atlassian Marketplace Plugins"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/bamboo/","tags":null,"title":"Bamboo"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/bash/shell/","tags":null,"title":"bash/shell"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/bitbucket/","tags":null,"title":"Bitbucket"},{"content":"","ref":"https://dvesti.github.io/site-hugo/categories/","tags":null,"title":"Categories"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/ci/cd-pipelines/","tags":null,"title":"CI/CD pipelines"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/confluence/","tags":null,"title":"Confluence"},{"content":"Provides required dependencies and additional utilities to simplify and codify the process of building, testing and delivering Atlassian plugins all the way to the live marketplace.Executes integration/AUT level tests against all stated compatible versions for the productUploads generated artifact to Atlassian marketplaceProvides corresponding metadata indicating version, release notes, and compatibility","ref":"https://dvesti.github.io/site-hugo/projects/creations/docker-marketplace/","tags":["Docker","Maven","Java","Python","REST APIs","Bash/Shell"],"title":"Docker image for Bitbucket CI/CD Pipelines  \"shipit\""},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/jira/","tags":null,"title":"JIRA"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/jquery/","tags":null,"title":"jQuery"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/maven/","tags":null,"title":"Maven"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/spring/","tags":null,"title":"Spring"},{"content":"","ref":"https://dvesti.github.io/site-hugo/tags/xml/xslt/","tags":null,"title":"xml/xslt"}]